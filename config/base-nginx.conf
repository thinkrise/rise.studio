##
#
# fillip.pro server configuration
#
##

#worker_processes       auto;
error_log               /var/log/nginx/error.log;
#pid                    logs/nginx.pid;
#worker_rlimit_nofile   8192;

#events {
#  worker_connections 4096;
#}

#http {
  #include conf/mime.types;

  #default_type          application/octet-stream;
  access_log             /var/log/nginx/access.log;
  #sendfile              on;
  #tcp_nopush            on;
  #server_names_hash_bucket_size 128;

  upstream fillip.pro_t {
    server 127.0.0.1:6001 weight=3;
  }

  ssl_certificate        /etc/nginx/ssl/fillip.pro_t.crt;
  ssl_certificate_key    /etc/nginx/ssl/fillip.pro_t.key;

  ssl_session_cache      shared:SSL:10m;
  ssl_session_timeout    10m;

  log_format compression '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" "$gzip_ratio"';

  server {
    listen                [::]:80 ipv6only=off;
    server_name           fillip.pro_t;
    return                301 https://$server_name$request_uri;
  }

  server {
    listen                [::]:443 ipv6only=off ssl;
    client_max_body_size  4G;
    server_name           fillip.pro_t;

    keepalive_timeout     70;

    gzip                  on;
    gzip_types text/plain application/xml application/json;
    gzip_min_length       1000;
    gzip_proxied no-cache no-store private expired auth;
    gzip_static           on;
    gunzip                on;

    # add Strict-Transport-Security to prevent man in the middle attacks.
    add_header Strict-Transport-Security "max-age=31536000";

    root /var/www/fillip.pro/html;

    index index.html index.htm index.nginx-debian.html;

    location / {
      # proxy_pass_header Server;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_read_timeout 240;
      proxy_pass https://fillip.pro_t;
      # First attempt to serve request as file, then
      # as directory, then fall back to displaying a 404.
      try_files $uri $uri/ =404;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny all;
    #}
  }
#}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
# server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
