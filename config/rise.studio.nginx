##
#
# rise.studio server configuration
#
##

error_log              /var/log/nginx/error.log;

access_log             /var/log/nginx/access.log;

# Forward to base node.js install.
upstream rise.studio {
  server 127.0.0.1:6000 weight=3;
}

ssl_certificate        /etc/nginx/ssl/rise.studio.crt;
ssl_certificate_key    /etc/nginx/ssl/rise.studio.key;

ssl_session_cache      shared:SSL:10m;
ssl_session_timeout    10m;

log_format compression '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" "$gzip_ratio"';

# Non-Secure (HTTP)
server {
  listen                [::]:80 ipv6only=off;
  server_name           rise.studio;
  return                301 https://$server_name$request_uri;
}

# Secure (HTTPS)
server {
  listen                [::]:443 ipv6only=off ssl;
  client_max_body_size  4G;
  server_name           rise.studio;

  keepalive_timeout     70;

  gzip                  on;
  gzip_types text/plain application/xml application/json;
  gzip_min_length       1000;
  gzip_proxied no-cache no-store private expired auth;
  gzip_static           on;
  gunzip                on;

  # add Strict-Transport-Security to prevent man in the middle attacks.
  add_header Strict-Transport-Security "max-age=31536000";

  root /var/www/rise.studio/html;

  index index.html index.htm index.nginx-debian.html;

  location / {
    # proxy_pass_header Server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_read_timeout 240;
    proxy_pass https://rise.studio;
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }
}
